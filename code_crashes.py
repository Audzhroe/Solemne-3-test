import streamlit as st
import pandas as pd
import plotly.express as px

# Configuraci칩n de la p치gina
st.set_page_config(page_title="An치lisis Inteligente de Accidentes", layout="wide", page_icon="游뚱")
st.title("游뚱 **An치lisis Inteligente de Accidentes**")
st.markdown("Explora datos y genera gr치ficos con validaciones din치micas para asegurar que las selecciones sean coherentes.")

# Cargar datos
with st.sidebar:
    uploaded_file = st.file_uploader("游늭 Sube tu archivo CSV:", type=["csv"])
    st.markdown("### 游꿛 Tema de gr치ficos:")
    theme = st.radio("Selecciona un tema:", ["Plotly", "Seaborn", "Simple"])

if uploaded_file:
    # Leer archivo
    data = pd.read_csv(uploaded_file)
    st.success(f"Archivo cargado exitosamente: **{uploaded_file.name}**")
    
    # Opciones de gr치ficos
    st.header("游늵 Gr치ficos Inteligentes")
    chart_type = st.selectbox("Selecciona el tipo de gr치fico:", 
                              ["Barras", "Histograma", "L칤neas", "Dispersi칩n", "Torta"])
    
    columns = data.columns.tolist()
    column_types = {col: str(data[col].dtype) for col in columns}  # Mapear columnas y sus tipos
    
    # Selecci칩n din치mica del eje X
    x_axis = st.selectbox("Selecciona el eje X:", columns, help="Eje base del gr치fico")
    
    # Filtrar columnas v치lidas para el eje Y seg칰n el gr치fico y eje X seleccionado
    if chart_type in ["L칤neas", "Dispersi칩n"]:
        # Para gr치ficos continuos, solo n칰meros
        valid_y_columns = [col for col in columns if column_types[col] in ["int64", "float64"]]
    elif chart_type == "Torta":
        # Para gr치ficos de torta, solo categor칤as
        valid_y_columns = [col for col in columns if column_types[col] == "object"]
    else:
        # Para otros gr치ficos, cualquier columna excepto la seleccionada para X
        valid_y_columns = [col for col in columns if col != x_axis]
    
    if chart_type != "Torta":
        y_axis = st.selectbox("Selecciona el eje Y:", valid_y_columns, help="Eje dependiente del gr치fico")
    
    # Validaci칩n: advertir si no hay columnas v치lidas para el eje Y
    if chart_type != "Torta" and not valid_y_columns:
        st.error("No hay columnas v치lidas para el eje Y con la selecci칩n actual.")
    else:
        # Opciones avanzadas
        with st.expander("游댢 Opciones avanzadas"):
            color_col = st.selectbox("Columna para color (opcional):", ["Ninguno"] + columns)
            if color_col == "Ninguno":
                color_col = None
            title = st.text_input("T칤tulo del gr치fico:", value=f"Gr치fico de {chart_type}")
        
        # Bot칩n para generar el gr치fico
        if st.button("Generar Gr치fico"):
            if chart_type == "Barras":
                fig = px.bar(data, x=x_axis, y=y_axis, color=color_col, title=title)
            elif chart_type == "Histograma":
                fig = px.histogram(data, x=x_axis, color=color_col, title=title)
            elif chart_type == "L칤neas":
                fig = px.line(data, x=x_axis, y=y_axis, color=color_col, title=title)
            elif chart_type == "Dispersi칩n":
                fig = px.scatter(data, x=x_axis, y=y_axis, color=color_col, title=title)
            elif chart_type == "Torta":
                fig = px.pie(data, names=x_axis, title=title)
            
            if theme == "Seaborn":
                fig.update_layout(template="seaborn")
            elif theme == "Simple":
                fig.update_layout(template="simple_white")
            st.plotly_chart(fig, use_container_width=True)
else:
    st.warning("Por favor, sube un archivo CSV para comenzar.")

# Footer
st.markdown("---")
st.markdown("游닉 **Nota:** Las selecciones din치micas aseguran que los datos sean compatibles con el tipo de gr치fico.")
